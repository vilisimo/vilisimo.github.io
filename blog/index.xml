<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog posts on Machine Code Never Lies</title>
    <link>https://vilisimo.com/blog/</link>
    <description>Recent content in Blog posts on Machine Code Never Lies</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 20 Jun 2018 00:00:00 +0300</lastBuildDate><atom:link href="https://vilisimo.com/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MVCC in PostgreSQL</title>
      <link>https://vilisimo.com/blog/mvcc-in-postgresql/</link>
      <pubDate>Sun, 10 Oct 2021 14:25:13 +0300</pubDate>
      
      <guid>https://vilisimo.com/blog/mvcc-in-postgresql/</guid>
      <description>Recently I’ve had the opportunity to give a short presentation at my work on PostgreSQL, and more specifically, concurrency control. While preparing for the presentation, I’ve come across a term that I was not familiar with: multiversion concurrency control (MVCC). I wish I could tell myself that this is an obscure area of research that I had no business of knowing anyway, but the fact is that it is a pretty well known concurrency control method.</description>
    </item>
    
    <item>
      <title>Making History</title>
      <link>https://vilisimo.com/blog/making-history/</link>
      <pubDate>Mon, 11 Jun 2018 23:43:08 +0300</pubDate>
      
      <guid>https://vilisimo.com/blog/making-history/</guid>
      <description>History  History will be kind to me for I intend to write it. - Winston Churchill (not really)
 As in real life, history in software development is important for several reasons. The first one is to have someone to blame when things go wrong. Once we&amp;rsquo;ve done that, it is also useful for figuring out how development has evolved, what changes were introduced, when they were introduced, and what was the reason for them.</description>
    </item>
    
  </channel>
</rss>
