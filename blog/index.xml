<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog posts on Machine Code Never Lies</title>
    <link>https://vilisimo.com/blog/</link>
    <description>Recent content in Blog posts on Machine Code Never Lies</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 20 Jun 2018 00:00:00 +0300</lastBuildDate><atom:link href="https://vilisimo.com/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Migration to New Domain</title>
      <link>https://vilisimo.com/blog/migration-to-new-domain/</link>
      <pubDate>Fri, 02 Jun 2023 18:04:22 +0300</pubDate>
      
      <guid>https://vilisimo.com/blog/migration-to-new-domain/</guid>
      <description>What? Recently I&amp;rsquo;ve started playing with Next.js. I liked it so much I decided to rebuild my blog with it. It just so happens that I also was thinking about getting a new domain. The stars aligned and I&amp;rsquo;ve moved the blog to https://www.directedignorance.com. Come visit, perhaps you&amp;rsquo;ll like it.
Why? Domain I&amp;rsquo;ve never really liked vilisimo.com. Nothing wrong with it, I just don&amp;rsquo;t really enjoy it all that much. &amp;ldquo;Directed ignorance&amp;rdquo;, on the other hand, reminds me of Discworld, one of my favorite book series.</description>
    </item>
    
    <item>
      <title>Git Tips and Tricks</title>
      <link>https://vilisimo.com/blog/git-tips-and-tricks/</link>
      <pubDate>Wed, 12 Apr 2023 20:47:55 +0300</pubDate>
      
      <guid>https://vilisimo.com/blog/git-tips-and-tricks/</guid>
      <description>These days, git is more or less synonymous with version control system. It does not matter what programming language you use, chances are you’ll use git to keep track of the code. Thus, one of the best ways to improve your development confidence and velocity is to get to know git well. While it is not necessary to understand all the minute details to be a proficient user, having a few neat tricks up your sleeve certainly helps.</description>
    </item>
    
    <item>
      <title>File System Permissions in Dockerfile</title>
      <link>https://vilisimo.com/blog/file-system-permissions-in-dockerfile/</link>
      <pubDate>Sat, 13 Aug 2022 11:37:56 +0300</pubDate>
      
      <guid>https://vilisimo.com/blog/file-system-permissions-in-dockerfile/</guid>
      <description>Few days ago I was playing with a Django application, trying to containerize it. Everything was going smoothly until I tried to run collectstatic in Dockerfile. Attempting to do so threw the following error:
Traceback (most recent call last): File &amp;#34;/home/project/app/manage.py&amp;#34;, line 33, in &amp;lt;module&amp;gt; main() File &amp;#34;/home/project/app/manage.py&amp;#34;, line 29, in main execute_from_command_line(sys.argv) File &amp;#34;/usr/local/lib/python3.10/site-packages/django/core/management/__init__.py&amp;#34;, line 446, in execute_from_command_line utility.execute() File &amp;#34;/usr/local/lib/python3.10/site-packages/django/core/management/__init__.py&amp;#34;, line 440, in execute self.fetch_command(subcommand).run_from_argv(self.argv) File &amp;#34;/usr/local/lib/python3.10/site-packages/django/core/management/base.py&amp;#34;, line 402, in run_from_argv self.</description>
    </item>
    
    <item>
      <title>Setting Up pytest With GitHub Actions</title>
      <link>https://vilisimo.com/blog/setting-up-pytest-with-github-actions/</link>
      <pubDate>Wed, 04 May 2022 23:00:46 +0300</pubDate>
      
      <guid>https://vilisimo.com/blog/setting-up-pytest-with-github-actions/</guid>
      <description>For the longest time I have been ignoring GitHub Actions despite all the good things said about them. I’ve been a long-time user of CircleCI [1] - it is a solid CI/CD platform, and it is perfectly sufficient for my (minimal) needs. However, a few days ago I decided to give GitHub Actions a shot - having CI/CD steps defined on the same platform where the code resides seemed appealing.</description>
    </item>
    
    <item>
      <title>MVCC in PostgreSQL</title>
      <link>https://vilisimo.com/blog/mvcc-in-postgresql/</link>
      <pubDate>Sun, 10 Oct 2021 14:25:13 +0300</pubDate>
      
      <guid>https://vilisimo.com/blog/mvcc-in-postgresql/</guid>
      <description>Recently I’ve had the opportunity to give a short presentation at my work on PostgreSQL, and more specifically, concurrency control. While preparing for the presentation, I’ve come across a term that I was not familiar with: multiversion concurrency control (MVCC). I wish I could tell myself that this is an obscure area of research that I had no business of knowing anyway, but the fact is that it is a pretty well known concurrency control method.</description>
    </item>
    
    <item>
      <title>Making History</title>
      <link>https://vilisimo.com/blog/making-history/</link>
      <pubDate>Mon, 11 Jun 2018 23:43:08 +0300</pubDate>
      
      <guid>https://vilisimo.com/blog/making-history/</guid>
      <description>History History will be kind to me for I intend to write it. - Winston Churchill (not really)
As in real life, history in software development is important for several reasons. The first one is to have someone to blame when things go wrong. Once we&amp;rsquo;ve done that, it is also useful for figuring out how development has evolved, what changes were introduced, when they were introduced, and what was the reason for them.</description>
    </item>
    
  </channel>
</rss>
